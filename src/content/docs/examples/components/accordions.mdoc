---
name: Accordions
title: Accordion Component Examples
description: Comprehensive examples of the Accordion markdoc component showing various content types and configurations
slug: examples/accordions
updatedDate: 2024-09-12
author: Joseph Lawler
---

# Accordion Component Examples

The Accordion component creates collapsible content sections that help organize information and save space while maintaining easy access to details.

## Basic Usage

A simple accordion with plain text content:

{% accordion title="Basic Accordion Example" %}
This is the content inside a basic accordion. When you click the title above, this content toggles between visible and hidden states.
{% /accordion %}

## Accordions with Rich Content

### Markdown Content
Accordions support full markdown formatting:

{% accordion title="Markdown Content Support" %}
This accordion contains **bold text**, *italic text*, and `code snippets`.

You can also include:
- Unordered lists
- Ordered lists
- Links to [other pages](/)
- And much more markdown content

Here's a code block:
```javascript
function example() {
    console.log("Code blocks work too!");
}
```
{% /accordion %}

### HTML Content
For more complex layouts, you can use HTML:

{% accordion title="HTML Content Example" %}
<div style="background: #f5f5f5; padding: 1rem; border-radius: 0.5rem; margin: 1rem 0;">
    <h4 style="margin-top: 0;">Custom HTML Content</h4>
    <p>This accordion contains custom HTML with inline styles.</p>
    <ul>
        <li>Custom styled containers</li>
        <li>Complex layouts</li>
        <li>Mixed content types</li>
    </ul>
</div>
{% /accordion %}

### Mixed Markdown and Components
Accordions can contain other markdoc components:

{% accordion title="Nested Components" %}
This accordion contains other markdoc components:

{% alert value="This is an alert inside an accordion!" type="info" /%}

{% button value="Button inside accordion" variant="primary" /%}

You can mix and match different components within accordion content for rich, interactive documentation.
{% /accordion %}

## Multiple Accordions

### FAQ Section
Perfect for frequently asked questions:

{% accordion title="What is this portfolio about?" %}
This portfolio showcases my work in software development, including projects, skills, and experience. It's built with modern web technologies and demonstrates various technical capabilities.
{% /accordion %}

{% accordion title="How was this site built?" %}
This site is built using:
- **Astro** for the static site framework
- **Markdoc** for content authoring
- **Tailwind CSS** for styling
- **TypeScript** for type safety
- **Custom components** for interactive elements
{% /accordion %}

{% accordion title="Can I use these components?" %}
Yes! The components demonstrated here are part of a reusable design system. You can find the source code and implementation details in the repository.

{% button value="View Source Code" href="https://github.com" target="_blank" variant="outline" /%}
{% /accordion %}

{% accordion title="How do I contact you?" %}
You can reach out through several channels:

- **Email**: contact@example.com
- **GitHub**: [@username](https://github.com)
- **LinkedIn**: [linkedin.com/in/profile](https://linkedin.com)

{% alert value="I typically respond to messages within 24-48 hours." type="info" /%}
{% /accordion %}

## Technical Documentation

### Installation Steps
{% accordion title="Step 1: Prerequisites" %}
Before installing, ensure you have the following:

- Node.js version 16 or higher
- npm or yarn package manager
- Git for version control

{% alert value="<strong>Important:</strong> Make sure your Node.js version is compatible before proceeding." type="warning" /%}
{% /accordion %}

{% accordion title="Step 2: Installation" %}
Install the required dependencies:

```bash
npm install @astrojs/markdoc
npm install @astrojs/tailwind
```

Or with yarn:

```bash
yarn add @astrojs/markdoc
yarn add @astrojs/tailwind
```
{% /accordion %}

{% accordion title="Step 3: Configuration" %}
Configure your `astro.config.mjs`:

```javascript
import { defineConfig } from 'astro/config';
import markdoc from '@astrojs/markdoc';
import tailwind from '@astrojs/tailwind';

export default defineConfig({
  integrations: [markdoc(), tailwind()],
});
```

{% alert value="Configuration complete! You can now use markdoc components." type="success" /%}
{% /accordion %}

## API Documentation

### Component Props
{% accordion title="Accordion Component API" %}
The Accordion component accepts the following props:

| Prop | Type | Default | Description |
|------|------|---------|-------------|
| `title` | string | required | The clickable title text |
| children | ReactNode | - | Content to show/hide |

**Example Usage:**
```markdoc
{% accordion title="Your Title Here" %}
Your content goes here
{% /accordion %}
```
{% /accordion %}

### Styling Details
{% accordion title="CSS Classes and Customization" %}
The accordion uses the following CSS classes:

- `.border-dashed` - Dashed border style
- `.border-theme-primary` - Theme-aware border color
- `.bg-theme-primary` - Theme-aware background
- `.hover:bg-theme-secondary` - Hover state styling

You can customize these by modifying the theme classes in your CSS configuration.

{% alert value="All styling is theme-aware and automatically adapts to light/dark mode." type="info" /%}
{% /accordion %}

## Best Practices

### Content Organization
{% accordion title="When to Use Accordions" %}
Accordions are best used when:

- You have multiple related sections of content
- Space is limited and you need to show/hide details
- Creating FAQ sections
- Organizing step-by-step instructions
- Providing optional detailed information

{% alert value="Don't overuse accordions for short content that could be displayed normally." type="warning" /%}
{% /accordion %}

### Accessibility Considerations
{% accordion title="Accessibility Features" %}
Our accordion component includes:

- **Keyboard Navigation**: Use Tab to focus and Enter/Space to toggle
- **Semantic HTML**: Uses proper `<details>` and `<summary>` elements
- **Screen Reader Support**: Properly labeled for assistive technology
- **Focus Management**: Visual focus indicators for keyboard users

{% alert value="Always provide meaningful titles that clearly describe the hidden content." type="info" /%}
{% /accordion %}

### Performance Tips
{% accordion title="Performance Considerations" %}
To optimize accordion performance:

- Keep content sections reasonably sized
- Avoid nesting too many components within accordions
- Consider lazy loading for content-heavy accordions
- Use semantic HTML for better browser optimization

{% button value="Learn More About Performance" href="/docs/performance" variant="outline" /%}
{% /accordion %}
