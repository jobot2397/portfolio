---
import { Icon } from "astro-icon/components";
export interface Props {
    iconName: string;

    link?: string;

    // Style variants
    variant?: "orange" | "black";
    size?: "sm" | "md" | "lg";

    // Custom overrides
    customClass?: string;
}

const {
    iconName,
    link,
    variant = "orange",
    size = "md",
    customClass = "",
} = Astro.props;

// Size configurations
const sizeClasses = {
    md: "h-10 w-10 text-lg",
};

// Variant configurations
const variantClasses = {
    orange: {
        base: "bg-theme-input text-theme-accent border-theme-primary",
        hover: "hover:bg-theme-secondary hover:border-theme-focus",
    },
};

const baseClasses =
    "relative aspect-square rounded-full bg-theme-input text-theme-accent font-bold border border-dashed border-theme-primary cursor-pointer overflow-hidden group";
const sizeClass = sizeClasses[size];
const variantClass = variantClasses[variant];
const combinedClasses = `${baseClasses} ${sizeClass} ${variantClass.base} ${customClass}`;
---

<a class={combinedClasses} href={link}>
    <div
        class="absolute inset-0 bg-theme-secondary rounded-full scale-0 group-hover:scale-100 transition-transform duration-300 ease-out"
    >
    </div>
    <div
        class="absolute inset-0 border border-dashed border-theme-focus rounded-full scale-0 group-hover:scale-100 transition-transform duration-300 ease-out delay-75"
    >
    </div>
    <span
        class="absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 z-10"
    >
        <Icon name={iconName} />
    </span>
</a>
